import java.util.NoSuchElementException;
public MyStack<T> {
    //Variables
    private MyLinkedList<T> store;

    //Constructors
    public MyStack() {
	store = new MyLinkedList<T>();
    }

    //Setters

    /**
     * Adds the given item to the top of the stack.
     */
    public void push(T item) {
	store.add(0, item);
    }

    //Getters
    
    /**
     * Removes the top item from the stack and returns it.
     * @exception java.util.NoSuchElementException if the queue is empty.
     */
    public T pop() throws NoSuchElementException {
	if (isEmpty()) {
	    throw new NoSuchElementException();
	} else {
	    T target = store.get(0);
	    store.remove(0);
	    return target;
	}
    }

    /**
     * Returns the top item from the stack without popping it.
     * @exception java.util.NoSuchElementException if the queue is empty.
     */
    T peek();

    /**
     * Returns the number of items currently in the stack.
     */
    public int size() {
	return store.size();
    }

    /**
     * Returns whether the stack is empty or not.
     */
    public boolean isEmpty() {
	return size() == 0;
    }
}
